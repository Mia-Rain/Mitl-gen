#!/bin/sh
IFS=""
[ "$domain" ] || domain="g.transcendent.ink"
[ "$license" ] || license="Licensed under Unlicense ~ Set it Free."
[ "$stack" ] || stack="ssh"
[ "$root" ] || root="~git"
[ "$1" ] && . $1  
# load custom data last so variables may be unset
# YMMV
in=$(while read -r p || [ $p ]; do
  printf '%s\n' "$p"
done) # set in to STDIN as we need it several times
l=0; n=0; while read -r p || [ $p ]; do 
    : $((l+=${#p})) # add length of lines together
    : $((n+=1))     # count lines
done << EOF
$in
EOF
l=$((l/n +30)) # find mean length size # should be good enough
[ $l -lt 45 ] && l=48 # make sure it at least matches with the header
# too long looks odd as does too short # hopefully the mean is a good middle point
## below is some jank to yank the project name
printf '<head>
<link rel="icon" href="/favicon.png">
<link rel="stylesheet" href="/style.css">
'
[ "$css" ] && printf '<link rel="stylesheet" href="%s">\n' "$css"
i=0; [ "$name" ] || while read -r p || [ $p ]; do
  [ "$i" -eq 1 ] && {
      p="${p#\#?}"; p=${p% *} # yank out any trailing/leading spaces
      name="${p}" 
      break
    }
  : $((i+=1)) 
done << EOF
$in
EOF
echo "<title>${root}/${title:-"${name}"}</title>"
printf '</head>
<body class="vsc-initialized">
<div class="%s">
<font color="#fffff">
<pre style="background-color: black">    | %s
    | ~ git clone %s://%s/%s --recursive
' "${div_class:-div}" "${license:+~ $license}" "$stack" "$domain" "$name" # print inital setup
# next gen header based on mean
printf '%s+' "----"; # no new line # printf gives bs -- error
n=0; until [ "$n" -eq "$l" ]; do 
  printf '-'
  : $((n+=1))
done; echo # new line
while read -r p || [ $p ]; do
  printf '    | %s\n' "$p"
done << EOF
$in
EOF
printf '    |
    |
    |
</pre>
</font>
</div>
'
[ "$addon" ] || echo '</body>'
[ "$addon" -a "$ascript" ] && ${ascript}
